#!/usr/bin/env groovy

/**
 *  Fixes the source code according the patch generated by WalkMod and pushes it if tests pass
 */
def call(body) {
    // evaluate the body block, and collect configuration into the object
    def config = [:]
    body.resolveStrategy = Closure.DELEGATE_FIRST
    body.delegate = config
    body()

    def validatePatch = config.validatePatch?:false
    def reportDir = config.reportDir?:'target'
    def branch = config.branch?:'master'
    def mvnHome = config.mvnHome
    def alwaysFailOnPatch = config.alwaysFailOnPatch?:false

    echo "Checking if there are WalkMod changes to apply"
    if (hasWalkModPatch(mvnHome)){

        if(alwaysFailOnPatch){

            currentBuild.result = 'FAILURE'
            error("Build failed by the lack of consistent coding style")

        }else {

            if (validatePatch) {
                input "Does the patch look ok?"
            }

            echo "Generating WalkMod report"
            generateWalkModReport reportDir

            echo "Applying the generated patch by WalkMod"
            applyWalkModPatch

            if (mvnHome != null) {
                echo "Running tests to see if patches work"
                sh "${mvnHome}/bin/mvn -DskipWalkmod test"
            }

            echo "Pushing WalkMod changes"
            pushWalkModPatch branch
        }

    }else{
        echo "Coding Style Status: SUCCESS"
    }


}
